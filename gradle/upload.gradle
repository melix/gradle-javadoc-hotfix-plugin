// everything required to upload to bintray
apply plugin: 'maven'

configurations {
    deployerJars
}

repositories {
    mavenCentral()
}

dependencies {
    deployerJars 'org.apache.maven.wagon:wagon-webdav:1.0-beta-2',
            'org.apache.maven:maven-ant-tasks:2.1.0'
}

def installer = install.repositories.mavenInstaller
def deployer = null

if(!project.hasProperty('bintrayUsername')) ext.bintrayUsername = ''
if(!project.hasProperty('bintrayPassword')) ext.bintrayPassword = ''

uploadArchives {
    repositories {
        deployer = mavenDeployer {
            name = 'bintrayDeployer'
            configuration = configurations.deployerJars
            snapshotRepository(url: 'http://oss.jfrog.org/artifactory/oss-snapshot-local') {
                authentication(userName: bintrayUsername, password: bintrayPassword)
            }
            repository(url: 'http://oss.jfrog.org/artifactory/oss-release-local') {
                authentication(userName: bintrayUsername, password: bintrayPassword)
            }
        }
    }
}

[installer, deployer].each { repo ->
    configure(repo) {
        pom.project {
            name(rootProject.name)
            description('A Gradle plugin that applies the Javadoc hotfix tool to generated javadoc and groovydoc')
            url('https://github.com/melix/gradle-javadoc-hotfix-plugin')
            inceptionYear '2013'
            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    distribution 'repo'
                }
            }
            scm {
                url 'https://github.com/melix/gradle-javadoc-hotfix-plugin'
            }
            developers {
                [
                        melix: 'CÃ©dric Champeau'
                ].each { devId, devName ->
                    developer {
                        id devId
                        name devName
                        roles {
                            role 'Developer'
                        }
                    }
                }
            }
        }
    }
}